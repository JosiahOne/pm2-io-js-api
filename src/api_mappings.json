{
    "user": [
        {
            "route": {
                "name": "/api/users/otp",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "409",
                    "description": "the otp is already enabled for the user, you can only delete it",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the otp can be registered for the account, return the full response",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "user",
                    "type": "object",
                    "description": "user model",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "key",
                    "type": "string",
                    "description": "otp secret key",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "qrImage",
                    "type": "string",
                    "description": "url to the QrCode",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "getOtp",
            "longname": "user.getOtp",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/otp",
                "type": "POST"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "otpKey",
                    "type": "string",
                    "description": "secret key used to generate OTP code",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "otpToken",
                    "type": "string",
                    "description": "a currently valid OTP code generated with the otpKey",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "missing parameters",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "the code asked to add the OTP from user account is invalid",
                    "optional": false
                },
                {
                    "type": "500",
                    "description": "error from database",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the otp has been registered for the user",
                    "optional": false
                }
            ],
            "name": "addOtp",
            "longname": "user.addOtp",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/otp",
                "type": "DELETE"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "query": [
                {
                    "name": "otpToken",
                    "type": "string",
                    "description": "a currently valid OTP code",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "missing parameters",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "the code asked to remove the OTP from user account is invalid",
                    "optional": false
                },
                {
                    "type": "500",
                    "description": "error from database",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the otp has been deleted for the user",
                    "optional": false
                }
            ],
            "name": "removeOtp",
            "longname": "user.removeOtp",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/isLogged",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "200",
                    "description": "the user has been retrieved",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "user",
                    "type": "object",
                    "description": "user model",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "isLogged",
            "longname": "user.isLogged",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/register",
                "type": "GET"
            },
            "body": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "role",
                    "type": "string",
                    "description": "job title in user company",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "company",
                    "type": "string",
                    "description": "company name",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "company_size",
                    "type": "string",
                    "description": "company size",
                    "optional": true,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "either the registeration of new user is disabled or\nthe database failed to register the user",
                    "optional": false
                },
                {
                    "type": "409",
                    "description": "the user field are already used by another user",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the user has been created",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "user",
                    "type": "object",
                    "description": "user model",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "access_token",
                    "type": "object",
                    "description": "access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "refreshToken",
                    "type": "object",
                    "description": "refresh token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "register",
            "longname": "user.register",
            "scope": "route",
            "authentication": false,
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/show/:id",
                "type": "GET"
            },
            "params": [
                {
                    "name": ":id",
                    "type": "string",
                    "description": "user id",
                    "optional": false
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "database error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "invalid parameters (no id provided)",
                    "optional": false
                },
                {
                    "type": "404",
                    "description": "no user account where found",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the mail has been sent to the provided email",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "String",
                    "type": "",
                    "description": "email user email",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "String",
                    "type": "",
                    "description": "username user pseudo",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "show",
            "longname": "user.show",
            "scope": "route",
            "authentication": false,
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/",
                "type": "POST"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "card token generated by stripe",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "missing parameters",
                    "optional": false
                },
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully added the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "object",
                    "description": "stripe credit card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "attachCreditCard",
            "longname": "user.attachCreditCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/subcriptions",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retrieved the charges",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "list of stripe subscriptions object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "listSubscriptions",
            "longname": "user.listSubscriptions",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/charges",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retieved the charges",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "list of stripe charges object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "listCharges",
            "longname": "user.listCharges",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/cards",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retieved the charges",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "list of stripe cards object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "fetchCreditCards",
            "longname": "user.fetchCreditCards",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card/:card_id",
                "type": "GET"
            },
            "authentication": true,
            "params": [
                {
                    "name": ":card_id",
                    "type": "string",
                    "description": "the stripe id of the card",
                    "optional": false
                }
            ],
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters card_id",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retieved the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "stripe card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "fetchCreditCard",
            "longname": "user.fetchCreditCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "404",
                    "description": "the user doesn't have any default card",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retieved the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "stripe card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "fetchDefaultCreditCard",
            "longname": "user.fetchDefaultCreditCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card",
                "type": "PUT"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "stripe card id",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "metadata",
                    "type": "object",
                    "description": "the metadata you can update",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.address_line1",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.address_country",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.address_zip",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.address_city",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters, you need to specify a card",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully updated the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "stripe card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "updateCreditCard",
            "longname": "user.updateCreditCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card/:card_id",
                "type": "DELETE"
            },
            "authentication": true,
            "params": [
                {
                    "name": ":card_id",
                    "type": "string",
                    "description": "the stripe id of the card",
                    "optional": false
                }
            ],
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters card_id",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retieved the card",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "the user must have one card active when having a subscription",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": ".",
                    "type": "object",
                    "description": "stripe card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "deleteCreditCard",
            "longname": "user.deleteCreditCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card/:card_id/default",
                "type": "POST"
            },
            "authentication": true,
            "params": [
                {
                    "name": ":card_id",
                    "type": "string",
                    "description": "the stripe id of the card",
                    "optional": false
                }
            ],
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters card_id",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully set the card as default",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "object",
                    "description": "stripe card object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "setDefaultCard",
            "longname": "user.setDefaultCard",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/card/stripe_metadata",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters card_id",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully retrieved the metadata",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": ".",
                    "type": "object",
                    "description": "stripe metadata object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "fetchMetadata",
            "longname": "user.fetchMetadata",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/payment/stripe_metadata",
                "type": "PUT"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "metadata",
                    "type": "object",
                    "description": "the metadata you can update",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.vat_number",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "metadata.company_name",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "stripe error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters, you need to specify a card",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully updated the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "data",
                    "type": "array",
                    "description": "stripe customer metadata object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "updateMetadata",
            "longname": "user.updateMetadata",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/update",
                "type": "PUT"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "old_password",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "new_password",
                    "type": "string",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                },
                {
                    "name": "info",
                    "type": "object",
                    "description": "",
                    "optional": true,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "500",
                    "description": "database error",
                    "optional": false
                },
                {
                    "type": "400",
                    "description": "missing parameters, no data to update",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "when updating the password, it need a new one",
                    "optional": false
                },
                {
                    "type": "406",
                    "description": "when updating the password, the old one is false",
                    "optional": false
                },
                {
                    "type": "409",
                    "description": "when updating email or username\n another user already have one of those two",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully updated the card",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": ".",
                    "type": "object",
                    "description": "user object",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "update",
            "longname": "user.update",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/integrations",
                "type": "GET"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "200",
                    "description": "succesfully retrieved providers",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": ".",
                    "type": "array",
                    "description": "array of providers for user account",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "name": "listProviders",
            "longname": "user.listProviders",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/integrations",
                "type": "POST"
            },
            "authentication": true,
            "body": [
                {
                    "name": "provider",
                    "type": "string",
                    "description": "the provider name",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "the email the user have on the provider",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "invalid parameters",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "the user already have this provider",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully added the provider",
                    "optional": false
                }
            ],
            "name": "addProvider",
            "longname": "user.addProvider",
            "scope": "route",
            "namespace": "user"
        },
        {
            "route": {
                "name": "/api/users/integrations/:name",
                "type": "DELETE"
            },
            "authentication": true,
            "params": [
                {
                    "name": ":name",
                    "type": "string",
                    "description": "the provider name",
                    "optional": false
                }
            ],
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "invalid parameters or provider isn't implemented",
                    "optional": false
                },
                {
                    "type": "403",
                    "description": "the provider isn't enabled",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "succesfully removed the provider",
                    "optional": false
                }
            ],
            "name": "deleteProvider",
            "longname": "user.deleteProvider",
            "scope": "route",
            "namespace": "user"
        }
    ],
    "auth": [
        {
            "name": "retrieveToken",
            "route": {
                "name": "/api/oauth/token",
                "type": "POST"
            },
            "body": [
                {
                    "name": "client_id",
                    "type": "string",
                    "description": "the public id of your oauth application",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "refresh_token",
                    "type": "string",
                    "description": "refresh token you retrieved via authorize endpoint",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "grant_type",
                    "type": "string",
                    "description": "",
                    "optional": false,
                    "defaultvalue": "refresh_token"
                }
            ],
            "code": [
                {
                    "type": "400",
                    "description": "invalid parameters (missing or not correct)",
                    "optional": false
                }
            ],
            "response": [
                {
                    "name": "access_token",
                    "type": "string",
                    "description": "a fresh access_token",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "refresh_token",
                    "type": "string",
                    "description": "the refresh token you used",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "expire_at",
                    "type": "string",
                    "description": "UTC date at which the token will be considered\n as invalid",
                    "optional": false,
                    "defaultvalue": null
                },
                {
                    "name": "token_type",
                    "type": "string",
                    "description": "the type of token to use, for now its always Bearer",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "longname": "auth.retrieveToken",
            "scope": "route",
            "authentication": false,
            "namespace": "auth"
        },
        {
            "route": {
                "name": "/api/oauth/revoke",
                "type": "POST"
            },
            "authentication": true,
            "header": [
                {
                    "name": "Authorization",
                    "type": "string",
                    "description": "bearer access token issued for the user",
                    "optional": false,
                    "defaultvalue": null
                }
            ],
            "body": [
                {
                    "name": "token",
                    "type": "string",
                    "description": "the refresh token you want to revoke\n if nothing is given, it will revoke the token used to make\n the request",
                    "optional": true,
                    "defaultvalue": null
                }
            ],
            "code": [
                {
                    "type": "404",
                    "description": "token not found",
                    "optional": false
                },
                {
                    "type": "500",
                    "description": "database error",
                    "optional": false
                },
                {
                    "type": "200",
                    "description": "the token has been succesfully deleted,\n if there was access token generated with this token, they\n have been deleted too",
                    "optional": false
                }
            ],
            "name": "revoke",
            "longname": "auth.revoke",
            "scope": "route",
            "namespace": "auth"
        }
    ]
}